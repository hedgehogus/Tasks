1) validate forms 

    validateAllFormFields(formGroup: FormGroup) {
        Object.keys(formGroup.controls).forEach(field => {
          const control = formGroup.get(field);
          if (control instanceof FormControl) {
            control.markAsTouched({ onlySelf: true });
          } else if (control instanceof FormGroup) {
            this.validateAllFormFields(control);
          }
        });
      }
      
2) http with params

    this._http.get(url, {params: {'email': 'research@gmail.com'}}).pipe(map((res: Response) => {
      console.log(Response);
      this.user.next([res.json()]);
    })).subscribe();
    
3) unsubscribe 

     private unsubscribe$ = new Subject<void>();

      todos: Todo[];
      constructor(private store: Store<State>) {}

      ngOnInit() {
        this.store
          .pipe(select(selectTodos), takeUntil(this.unsubscribe$)) // unsubscribe to prevent memory leak
          .subscribe(todos => this.todos = todos);            // unwrap observable
      }

      ngOnDestroy(): void {
        this.unsubscribe$.next();
        this.unsubscribe$.complete();
      }
    }
    
    
 4) MatDialog
  const dialogRef = this.dialog.open(LeaveFeedbackComponent, {width: '80%', height: '95%'});
  
  app.module ->>   
    entryComponents: [
        LeaveFeedbackComponent],
