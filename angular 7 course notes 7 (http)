@Injectable()
export class ServerService {
  constructor (private http: Http){
  }
  
  addServers(servers: any[]) {
    this.http.post('https://udemy-ng-http.firebaseio.com', servers).map(
      (resp: Response) => {
        const data = response.json();
        return data
      }
    ).catch(
      (err: Response) => {
        console.log(error);
        return Observable.throw(error);
      }
    ).subscribe(
      (resp) => console.log(resp);
      (err) => {};
    );
  }
  
  getAppName(){
    return this.http.get('https://udemy-ng-http.firebaseio.com/appName.json')
        .map((responce: Responce) =>{
          return response.json();
        });
  }
}

appName = this.serverService.getAppName();

<h1>{{appName| async}}</h1>

---------
HttpClient

    storeRecipes(){
        return this.httpClient.put('https://udemy-ng-http.firebaseio.com/recipes.json?auth='+ token, this.recipeService.getRecipes));
      }
    
    getAppName(){
      return this.httpClient.get<Recipe[]>('https://udemy-ng-http.firebaseio.com/recipes.json?auth='+ token')
          .map((recipes) =>{
            return recipes.json();
          });
    }
    
    getAppName(){
      return this.httpClient.get('https://udemy-ng-http.firebaseio.com/recipes.json?auth='+ token', 
      {
        //body:
        //headers:
        observe: 'response',
        responceType: 'text' //'json', 'blob', 'arrayBuffer'
      } )
          .map((recipes) =>{
            return recipes.json();
          });
    }
    
     return this.httpClient.get('https://udemy-ng-http.firebaseio.com/recipes.json?auth='+ token', 
      {
        observe: 'events'     
      } ).subscribe((response: HttpEvent<Object>) => {
        console.log(response === HttpEventType.sent); // Responce, User, DownloadProgress, UploadProgress
       })
    
    
