@Injectable()   /// intercept request
export class AuthInterceptor implements HttpInterceptor{

  constructor(private authService: AuthService){}
  
  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>{
      //const copiedReq = req.clone({headers: req.headers.append('')});   
      const copiedReq = req.clone({params: req.params.append('auth', this.authService.getToken())});  
      return next.handle(copiedReq);
  }
}


----
core.module.ts

@NgModule({
    providers: [
      {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true}
    ]
})


-----------------------------------------

@Injectable()    /// intercept responce
export class LoggingInterceptor implements HttpInterceptor{
  
  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>{ 
      return next.handle(req).do(
        event => {
          console.log('logging interceptor', event);
        }
      );
  }
}
