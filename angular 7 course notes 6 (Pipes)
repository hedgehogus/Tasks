transform output in template

1) creating pipe 

@Pipe({
  name: 'shorten'
})
export class ShortenPipe implements PipeTransform{
  transform(value: any, limit: number){
    if (value.length > limit){
      return value.substr(0, limit) + ' ...';
    }
    return value;
  }
}

@NgModule({
  declarations:[
    ShortenPipe
  ]
})

2) filter pipe

@Pipe({
  name: 'filter',
  pure: false          ---- detect changes
})
export class ShortenPipe implements PipeTransform{
  transform(value: any, filterString: string, propName: string); any{
    if (value.length === 0){
      return value;
    }
    const resultArray = [];
    for (const item of value){
      const resultArray = [];
      if(item[propName] === filterString){
        resultArray.push(item);
      }
      return resultArray;
    }
    return resultArray;
  }
}

*ngFor="let server of servers | filter: filteredStatus: 'status'
