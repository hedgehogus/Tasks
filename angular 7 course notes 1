1) project setup
    npm install -g @angular/cli
    ng new my-app
    cd my-app
    ng serve
    
    npm - node package manager
    
2) decorators: 
    @Component()
    @NgModule()
    @Directive()
    
    @Input()
    @Output()
    @ViewChild()
    
3) attribute selectors 
    <div app-servers> </div>
    @Component({
      selector: '[app-servers]',...
    })
    
   class selectors:
   <div class='app-servers'> </div>
    @Component({
      selector: '.app-servers',...
    })
    
4) directives:
    * - structural directive - changes structure of dom
          *ngIf
          *ngFor
     - attribute directives
          [ngStyle]='{color: green}'
          [ngClass]='{online: true}'
    ----
    <p> *ngIf="serverCreated; else noServer">erewr</p>
    <ng-template #noServer>
      <p>text</p>
    </ng-template>
    ----
    <p> *ngFor="let logItem of log; let i = index">erewr</p>
    
5) models
    export class Ingredint {
        constructor(public name: string, public amount: number) {}
     }
     
6) augury
    https://chrome.google.com/webstore/detail/augury/elgalmkoelokbchhkhacckoklkejnhcd
    
7) input alias
       @Input('nameOfProperty') element: {type:string, name: string};
       @Input('nameOfEvent') event = new EventEmitter<{type:string, name: string}>();
       
8) css encapsulation 
    @Component({
        encapsulation: ViewEncapsulation.None - for all files
        encapsulation: ViewEncapsulation.Native - for some browsers
        encapsulation: ViewEncapsulation.Emulated - encapsulated (default)
    })
    
9) local reference 
    <input #serverNameInput> - can use this variable in template (type : HTMLInputElement)
    @ViewChild('serverNameInput') serverNameInputVariable: ElementRef - #serverNameInput - in html
     @ViewChild(ChildComponent) serverNameInputVariable: ElementRef - find first occurence
    
